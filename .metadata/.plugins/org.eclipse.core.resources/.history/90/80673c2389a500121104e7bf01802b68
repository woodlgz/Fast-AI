/*
 * GA.h
 *
 *  Created on: Apr 15, 2013
 *      Author: woodlgz
 */

#ifndef GA_H_
#define GA_H_

#include "AIException.h"

namespace FASTAI{
	namespace GA{

		class Population;
		class GeneticPhase;
		class Possibility;
		class Env;

		class GA{
		private:
			GA(){}
		public:
			GA* getInstance(){
				return new GA();
			}
		private:
			Population* m_population;
		};

		class Population{
		private:
			GeneticPhase* m_phases;
		};

		class GeneticPhase{
		public:
			GeneticPhase(){
			}
			virtual ~GenticPhase(){
			}
			void setChance(Possibility* chance){
				m_chance = chance;
			}
		protected:
			virtual void crossing(GeneticPhase* phase) = 0;
			virtual void mutate() = 0;
		private:
			Possibility* m_chance;
			friend Env env;
		};

		class Possibility{

		};

		class Env{
		public:
			virtual bool isFit(GeneticPhase* phase) = 0;
		};

	}
};

#endif /* GA_H_ */
